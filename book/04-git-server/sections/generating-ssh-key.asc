[[_generate_ssh_key]]
=== 生成你的SSH公钥

(((SSH keys)))
如人们所说的，许多Git服务器使用SSH公钥来进行认证。
为了向Git服务器提供一个SSH公钥，每个系统内的用户在没有SSH公钥的情况下必须自行生成。
这个操作在所有的操作系统上都是相似的。
首先，你得确认你是否已经拥有了一个密钥。
一般情况下，用户的SSH公钥储存在 `~/.ssh` 目录内。
你可以通过下面的操作来快速地确认密钥是否已经存在

[source,console]
----
$ cd ~/.ssh
$ ls
authorized_keys2  id_dsa       known_hosts
config            id_dsa.pub
----

你将看见一对名字类似 `id_dsa`（或 `id_rsa`）与其对应的带有 `.pub` 扩展名的密钥。
带有 `.pub` 扩展名的文件是你的公钥，而另一个则是私钥。
如果你找不到这些文件（或者你根本没有 `.ssh` 目录），你可以通过运行Linux/Mac的SSH软件包中的 `ssh-keygen` 程序来创建密钥，在Windows上，这个程序包含于MSysGit软件包中。

[source,console]
----
$ ssh-keygen
Generating public/private rsa key pair.
Enter file in which to save the key (/home/schacon/.ssh/id_rsa):
Created directory '/home/schacon/.ssh'.
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in /home/schacon/.ssh/id_rsa.
Your public key has been saved in /home/schacon/.ssh/id_rsa.pub.
The key fingerprint is:
d0:82:24:8e:d7:f1:bb:9b:33:53:96:93:49:da:9b:e3 schacon@mylaptop.local
----

首先它会确认密钥的存储位置（默认是 `.ssh/id_rsa`），然后它将让你输入两次密钥口令，如果你不想在使用密钥时使用口令，直接留空即可。

现在，每个完成了上述操作的用户必须将他们的公钥提交给你或任何管理Git服务器的人（假设你正在使用一个需要公钥来设置SSH服务器）
现在他们需要做的就是将 `.pub` 文件中的内容复制并通过邮件发出。
公钥看起来是这样的：

[source,console]
----
$ cat ~/.ssh/id_rsa.pub
ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAklOUpkDHrfHY17SbrmTIpNLTGK9Tjom/BWDSU
GPl+nafzlHDTYW7hdI4yZ5ew18JH4JW9jbhUFrviQzM7xlELEVf4h9lFX5QVkbPppSwg0cda3
Pbv7kOdJ/MTyBlWXFCR+HAo3FXRitBqxiX1nKhXpHAZsMciLq8V6RjsNAQwdsdMFvSlVK/7XA
t3FaoJoAsncM1Q9x5+3V0Ww68/eIFmb1zuUFljQJKprrX88XypNDvjYNby6vw/Pb0rwert/En
mZ+AW4OZPnTPI89ZPmVMLuayrD2cE86Z/il8b+gw3r3+1nKatmIkjn2so1d01QraTlMqVSsbx
NrRFi9wrf+M7Q== schacon@mylaptop.local
----

想要更深入地了解在多种操作系统中生成SSH密钥的方法，请参阅Github的SSH密钥教程：https://help.github.com/articles/generating-ssh-keys[].
