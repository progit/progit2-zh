=== GitWeb

(((serving repositories, GitWeb)))(((GitWeb)))
既然现在已经可以以只读和读写两种方式访问 Git 项目了，现在可以搭建一个简单的网页版可视化工具。
Git 自带一个叫 GitWeb 的 CGI 脚本，有时候它被用作此项用途。

[[gitweb]]
.GitWeb —— 网页版的用户界面.
image::images/git-instaweb.png[The GitWeb web-based user interface.]

如果想了解一个项目在 GitWeb 上看起来如何，而且你也有一个轻量级的服务器，如  `lighttpd` 或 `webrick`，那么可以使用 Git 内建的命令来创建临时实例。
在 Linux 主机上通常都安装有 `lighttpd`，你或许可以在你的项目目录中运行 `git instaweb` 来启动它。
如果使用的是 Mac，Leopard 预装了 Ruby，所以 `webrick` 或许是最佳选择。
使用一个 `lighttpd` 以外的处理程序来启动 `instaweb`，只需在其后添加 `--httpd` 选项。(((git commands, instaweb)))

[source,console]
----
$ git instaweb --httpd=webrick
[2009-02-21 10:02:21] INFO  WEBrick 1.3.1
[2009-02-21 10:02:21] INFO  ruby 1.8.6 (2008-03-03) [universal-darwin9.0]
----

上面的命令启动了一个 HTTPD 服务器监听 1234 端口，同时也将这个网页打开在浏览器中。
这对你来说是轻而易举的事。
当你使用结束需要关闭那个服务器的时候，可以运行相同的命令，只不过这一次要添加 `--stop` 的选项：

[source,console]
----
$ git instaweb --httpd=webrick --stop
----

如果是为了团队或者托管的开源项目长期运行一个网页界面，那就需要在你日常的 Web 服务器上配置该 CGI 脚本。
一些 Linux的发行版有 `gitweb` 包，可能仅需通过 `apt` 或 `yum` 就能轻松安装。你也可以先尝试一下这个包。
下面将非常快速地讲解一下手动安装 GitWeb 的具体步骤。
首先，你需要获取 Git 源代码，GitWeb 就包含在其中。接着生成定制的 CGI 脚本：

[source,console]
----
$ git clone git://git.kernel.org/pub/scm/git/git.git
$ cd git/
$ make GITWEB_PROJECTROOT="/opt/git" prefix=/usr gitweb
    SUBDIR gitweb
    SUBDIR ../
make[2]: `GIT-VERSION-FILE' is up to date.
    GEN gitweb.cgi
    GEN static/gitweb.js
$ sudo cp -Rf gitweb /var/www/
----

请注意上面的 `GITWEB_PROJECTROOT` 变量，需要指明 Git 仓库所在路径。
接下来要设置 Apache 为该脚本使用 CGI，可以添加一个虚拟主机：

[source,console]
----
<VirtualHost *:80>
    ServerName gitserver
    DocumentRoot /var/www/gitweb
    <Directory /var/www/gitweb>
        Options ExecCGI +FollowSymLinks +SymLinksIfOwnerMatch
        AllowOverride All
        order allow,deny
        Allow from all
        AddHandler cgi-script cgi
        DirectoryIndex gitweb.cgi
    </Directory>
</VirtualHost>
----

重申一下，GitWeb 可以运行在任何支持 CGI 或 Perl 的 Web 服务器上；如果使用其它服务器，配置应该不会太困难。
到这里，访问 `http://gitserver/` 应该就能在线看到你的仓库了。
