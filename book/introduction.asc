[preface]
== 引言

你将花费你生命中的若干小时来阅读有关 Git 的相关内容。
让我们用几分钟时间来介绍下我们将给你讲解的内容。
下面是本书正文十章和附录三章的快速总结。

在 *第一章* ，我们将介绍版本控制系统（VCSs）和 Git 的基本概念——不涉及技术内容，仅仅是什么是 Git，
为什么它会成为 VCSs 大家庭中的一员，它与其它 VCSs 的区别，以及为什么那么多人都在使用 Git。
然后，我们将介绍如何下载 Git 以及如果你的系统没有安装 Git，如何为第一次运行做准备。

在 *第二章* ，我们将阐述 Git 的基本使用——包含你在使用 Git 时可能遇到的 80% 的情形。
通过阅读本章，你应该能够克隆仓库、查看项目历史、修改文件和贡献更改。
如果本书在此刻自燃，你应该已经能够使用已经学到的漂亮有用的 Git 知识获取到另外一份拷贝。

*第三章* 关注于 Git 的分支模型。分支模型通常被认为是 Git 的杀手级特性。
这里，你将学习到究竟是什么让 Git 与众不同。学习完本章，你可能需要一段时间来思考，
在 Git 分支成为你的生活的一部分之前，你到底是如何生活的。

*第四章* 关注于服务器端的 Git。本章面向那些希望在你自己的组织或个人服务器搭建用于合作的 Git 的读者。
如果你希望让别人处理这些事务，我们也会探讨一些托管选项。

*第五章* 将阐述多种分布式工作流的细节，以及如何使用 Git 实现它们。
学习完本章，你应该能够在多个远程仓库之间游刃有余，通过电子邮件使用 Git，
熟练地处理多个远程分支和合作者贡献的补丁。

*第六章* 介绍 GitHub 托管服务以及深层次的工具。我们将涵盖注册与账户管理，
创建和使用 Git 仓库，贡献项目的普通工作流以及接受他人的贡献，GitHub
的可编程接口和那些能够让你的生活变得更简单的小技巧。

*第七章* 关于 Git 的高级命令。你将学习到一些高级主题，诸如掌握可怕的“reset”命令，
使用二分搜索识别错误，编辑历史，细节版本选择等等。本章的介绍将丰富你的
Git 知识，让你成为一个真正的大师。

*第八章* 关于 Git 环境的自定义配置，包括设置用于增强或促进自定义策略的钩子脚本，
以及按照你所需要的方式进行工作的环境配置。我们还会介绍构建你自己的脚本集，以增强自定义提交策略。

*第九章* 对比 Git 和其它 VCSs，包括在 Subversion（SVN）的世界使用 Git 以及从其它 VCSs 迁移到 Git。
很多组织仍在使用 SVN，并且也没有计划改变，此时，你将了解到 Git 不可思议的能力——本章将展示，
在你不得不使用 SVN 服务器的时候如何协同合作。我们还将介绍如何从不同系统导入项目，
以便你能够全身心投入 Git 的怀抱。

*第十章* 深入 Git 隐晦而漂亮的实现细节。现在，你已经知道所有有关 Git 的知识，
能够熟练运用 Git 的强大优雅的功能。接下来，你可以继续学习 Git 如何存储对象、
Git 的对象模型是怎样的、打包文件的细节、服务器协议等更多知识。
本书自始至终都将引用本章的内容，以便你能够在当时就可以深入了解。
但是，如果你像我们一样希望深入学习技术细节，你可能想先阅读第十章。我们将选择权交给你。

在 *附录 A* ，我们学习多个在特定环境中使用 Git 的实例。
我们涵盖多个你可能会使用 Git 的多个 GUI 和 IDE 编程环境，这些都可以由你自己选择。
如果你想在 shell、IDE 或文本编辑器中使用 Git，请阅读本章。

在 *附录 B* ，我们探讨通过类似 libgit2 和 JGit 的工具编写 Git 脚本、扩展 Git。
如果你对编写复杂、快速的自定义工具感兴趣，需要了解 Git 的底层访问，本章就是你所需要了解的。

最后在 *附录 C* ，我们一次性浏览 Git 的所有主要命令，复习在本书中介绍的内容，
回忆我们能够使用这些命令做什么。如果你需要知道本书中我们使用了哪些特定 Git 命令，你可以在这里查阅。

下面让我们开始吧。
