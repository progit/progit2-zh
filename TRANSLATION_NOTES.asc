== 翻译约定
* [line-through]#在翻译之前，首先在 github 的 issue “翻译章节认领”中查找自己想翻译的章节是不是已经有人翻译，如果没有，在 issue 追加评论，避免重复劳动。#（ *UPDATE* ：所有翻译工作已经完成。请移步 https://github.com/progit/progit2-zh/issues/160 认领审校任务。）
* 在存在与第一版相关章节时，注意参考第一版的相关翻译。
* 原则上所有标点均使用全角，标点两侧不应有空格，输出、引用除外。
* 嵌入中文中的英文两端添加空格；如果英文前、后是标点，则不需再添加空格。数字一般也按照英文的方式进行处理。
* 原文中的“``PLACEHOLDER''”（两个反引号+文字+两个半角单引号）为双引号转义符，统一使用中文全角双引号““””，双引号前后不需要添加空格。
++++
对上一句的解释，请注意观察“”‘’"'`的区别：原文有一个``killer feature,''，在英文版显示效果是“killer feature,”，没问题。但是中文版对应代码是``必杀技特性''，结果效果是`‘必杀技特性’'，因为处理中文的bug，仅仅转换了单引号。所以要把它换成“必杀技特性”，直接使用全角引号。翻译中很多引号错误都是因为不遵照上一条规范造成的！另外不要相信  https://tool.lu/asciidoc/   ，它的效果有很多错误
++++
* 在没有其它影响的情况下，英文“you”统一翻译为“你”。如果原文中“you”的出现过于频繁，可以在译文中适当减少“你”，或将部分“你”用“我们”替代，但应考虑如下原则：
  - 保证句子主语明确、主谓一致。
  - “你”与“我们”的表述不必严格统一，优先考虑行文的流畅。
  - 某些可以根据上下文确定主语的场景，可以省略“你”或“我们”，但不宜滥用。
* 章节头部的锚记（anchor）统一不译，保留原文。相应的交叉引用（xref）也应不译。参见《AsciiDoc User Guide》的“link:http://asciidoc.org/userguide.html#_inline_macros[21.1.2. Internal Cross References]”小节。
* 所有的英文人名统一不译，保留原文。
* 章节标题只能出现中文字样；如有必要说明术语原文，在正文中第一次出现处注明，不应重复。
* 翻译提交之前将文件以 UTF-8 编码保存。

=== 翻译状态

在翻译工作进行时，请及时修改 `status.json` 文件，更新每个文件的翻译进度。该信息将会在页面显示，以便读者知道还有多少工作才能完成。

[line-through]#合并请求在接收到并审核完毕之后，保留 48 小时时间，以防又有别人发现新的问题。如果 48 小时之内没有其它改变，将直接合并到主分支。#（ *UPDATE* ：合并请求在三个有效审校并修订完成后直接合入主干。最终由一个审核小组统一风格。）

=== 专业术语对照表

为了保证翻译风格的统一，在翻译专业术语的时候请尽量参考如下对照表，同时也欢迎大家针对下表进行 *补充* 和 *讨论* 。

术语的译法应当优先参考“link:https://github.com/git/git/blob/master/po/zh_CN.po[Git 软件包的简体中文翻译]”。

==== *#*

3-way merge => 三方合并

==== *A*

abbreviate => 简写/简写的 SHA-1 值

abbreviated => 简写的

amend => 修补

ancestor => 祖先/祖先提交

annotate => 附注

annotated => 附注的

annotated tag => 附注标签

apply => 应用

argument => 参数

authentication => 认证

==== *B*

backport => 向后移植

bare repo => 纯仓库

bare repository => 纯仓库

binding => 绑定

bisect => 二分查找

blob object => 数据对象

branch => 分支

bug => bug

==== *C*

certificate => 证书

checkout => 检出

checksum => 校验/校验和

cherry-pick => 拣选

chunk => 块/区块

clean => 干净/干净的工作区

client => 客户端

clone => 克隆

code review => 代码审查

collaborator => 合作者

command => 命令

commit => 提交

commit message => 提交说明

commit object => 提交对象

confilict => 冲突

contributing => 贡献/作贡献

contribution => 贡献

contributor => 贡献者

==== *D*

dangling object => 悬空对象

dumb HTTP protocol => 哑 HTTP 协议

==== *E*

email address => 邮件地址

endpoint => 接口

==== *F*

fast-forward => 快进

fetch => 获取

fork => 派生

==== *G*

guideline => 准则

==== *H*

hash => 哈希/哈希值

HEAD => HEAD/头指针/当前分支

head => 头/分支

header => 头信息

hook => 钩子

hunk => 数据块/区块/片段

==== *I*

ignore => 忽略

importer => 导入器

index => index/索引/暂存区

issue => 缺陷/问题/议题/issue

==== *J*

==== *K*

==== *L*

lightweight tag => 轻量标签

log => 日志

loose object => 松散对象

==== *M*

merge => 合并

==== *N*

==== *O*

object => 对象

object database => 对象库

object name => 对象名称

object type => 对象类型

option => 选项

==== *P*

pack => 包/打包

packed => 已打包的

packfile => 包文件

parameter => 参数

parent => 父提交

patch => 补丁

pathspec => 路径规格

pattern => 模式

plumbing => 管件

porcelain => 瓷件

progressive-stability => 渐进稳定

pull => 拉/拉取

pull request => 拉取请求

push => 推/推送

==== *Q*

==== *R*

reapply => 重新应用

rebase => 变基

ref => 引用

reference => 引用

reflog => 引用日志

refspec => 引用规格

regex => 正则表达式

remote => 远程/远程仓库

remote helper => 远程助手

remote-tracking branch => 远程跟踪分支

replay => 重放

repo => 仓库

repository => 仓库

resolve => 解决

reverse => 反转/相反

revert => 还原

revision => 版本

rewind => 回退

rewrite => 重写

==== *S*

SCM => SCM/源代码管理工具

SHA-1 => SHA-1

shorthand => 简写

show => 显示

sign => 签名

signed => 已签署的/已签名的

signed tag => 签名标签

silo => 流水线

smart HTTP protocol => 智能 HTTP 协议

squash => 压缩

stage => 暂存

staged => 已暂存的

staging area => 暂存区

stash => 进度保存/保存进度

store => 保存/存储

submodule => 子模块

==== *T*

tag => 标签/打标签

tag object => 标签对象

tagger => 打标签者

three-way merge => 三方合并

track => 跟踪

tracking branch => 跟踪分支

topic branch => 特性分支

tree => 树/目录树

tree object => 树对象

==== *U*

unambiguous => 没有歧义/没有歧义的

unannotated tag => 未附注标签

unpack => 解包

unstage => 取消暂存

upstream => 上游/上游仓库

==== *V*

VCS => 版本控制系统/VCS

==== *W*

whitespace => 多余的空白字符

workflow => 工作流程

working directory => 工作目录

working tree => 工作区

==== *X*

==== *Y*

==== *Z*
